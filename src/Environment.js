class Environment {
    // static ISLAND_STARTER = PIXI.Texture.from('assets/starterisland.png');
    static ISLAND_STARTER_UNDERWATER = PIXI.Texture.from('assets/starterisland-water.png');

    // static SMALL_ISLAND1 = PIXI.Texture.from('assets/smallisland1.png');
    static SMALL_ISLAND1_UNDERWATER = PIXI.Texture.from('assets/smallisland1water.png');

    // static SMALL_ISLAND2 = PIXI.Texture.from('assets/smallisland2.png');
    static SMALL_ISLAND2_UNDERWATER = PIXI.Texture.from('assets/smallisland2water.png');

    // static SMALL_ISLAND3 = PIXI.Texture.from('assets/small-island3.png');
    static SMALL_ISLAND3_UNDERWATER = PIXI.Texture.from('assets/small-island3water.png');

    // static ISLAND2 = PIXI.Texture.from('assets/island2.png');
    static ISLAND2_UNDERWATER = PIXI.Texture.from('assets/island2water.png');

    // static ISLAND3 = PIXI.Texture.from('assets/island3.png');
    static ISLAND3_UNDERWATER = PIXI.Texture.from('assets/island3-water.png');

    // static ISLAND4 = PIXI.Texture.from('assets/island4.png');
    static ISLAND4_UNDERWATER = PIXI.Texture.from('assets/island4water.png');

    // static ISLAND5 = PIXI.Texture.from('assets/island5.png');
    static ISLAND5_UNDERWATER = PIXI.Texture.from('assets/island5water.png');

    // static END_ISLAND_TOP = PIXI.Texture.from('assets/endisland-top.png');
    static END_ISLAND_TOP_UNDERWATER = PIXI.Texture.from('assets/endisland-top-water.png');

    // static END_ISLAND_BOTTOM = PIXI.Texture.from('assets/endisland-bottom1.png');
    static END_ISLAND_BOTTOM_UNDERWATER = PIXI.Texture.from('assets/endisland-bottom-water.png');

    static surfaceColorShader = new SurfaceColorShader();
    static interactableColorShader = new SurfaceColorShader();

    static waterFilter = new BetterWaterShader();
    static waterTime = 0;

    static defaultStrength = 0.65;
    static defaultOpacity = 0.5;
    static defaultBackgroundColor = [33 / 255, 64 / 255, 90 / 255];
    static defaultUnderwaterColor = [5 / 255, 17 / 255, 26 / 255];

    static initialize() {
        Environment.waterFilter.setBackgroundColor(Environment.defaultBackgroundColor[0], Environment.defaultBackgroundColor[1], Environment.defaultBackgroundColor[2]);
        Environment.waterFilter.setStrength(Environment.defaultStrength);

        Environment.surfaceColorShader.setColor(Environment.defaultUnderwaterColor[0], Environment.defaultUnderwaterColor[1], Environment.defaultUnderwaterColor[2], 0);
        Environment.interactableColorShader.setColor(0, 0, 0, 0);

        Renderer.underwater.filters = [Environment.waterFilter];
        Renderer.underwater.filterArea = new PIXI.Rectangle(0, 0, window.innerWidth, window.innerHeight);

        const islandStarterWater = new PIXI.Sprite(Environment.ISLAND_STARTER_UNDERWATER);
        islandStarterWater.filters = [Environment.surfaceColorShader];
        islandStarterWater.anchor.x = 0.5;
        islandStarterWater.anchor.y = 0.5;
        islandStarterWater.position.x = 111 / 0.04;
        islandStarterWater.position.y = 452 / 0.04;
        islandStarterWater.visile = false;
        Renderer.underwaterBackground.addChild(islandStarterWater);
        CullOptimizer.addPermanentSpriteAfterSetup(islandStarterWater);
        IslandManager.addIsland([[2568,10648],[2365,10818],[2248,10895],[2107,10858],[1991,10898],[1951,10971],[2005,11120],[2103,11182],[2100,11385],[2063,11563],[2121,11621],[2281,11578],[2408,11516],[2637,11472],[2841,11447],[2917,11454],[3022,11454],[3135,11400],[3193,11349],[3316,11301],[3458,11192],[3578,11000],[3578,10786],[3553,10600],[3502,10473],[3364,10390],[3164,10411],[3077,10517],[2964,10557],[2833,10564],[2659,10579]]);
        IslandManager.addIsland([[2198,12050],[2092,12021],[2030,12028],[2023,12108],[2100,12181],[2179,12199],[2321,12221],[2456,12224],[2525,12235],[2612,12235],[2681,12224],[2819,12235],[2939,12231],[3073,12217],[3168,12181],[3215,12115],[3189,12042],[3153,12013],[2990,12024],[2793,12006],[2634,11988],[2499,11999],[2397,12046],[2328,12064]]);
        IslandManager.addIsland([[3578,11708],[3542,11763],[3553,11850],[3618,11897],[3712,11883],[3760,11814],[3774,11741],[3745,11676],[3651,11672]]);
        TreeManager.addTreeList([[3277,10673],[2990,10836],[2761,10786],[2419,11076],[2612,11349],[2881,11192],[3226,11083],[2506,12144],[2964,12112]]);
        TreeManager.addTreeList([[3141,10696],[3255,10786],[3356,10926],[3041,10911],[3154,11144],[2846,11033],[2772,10924],[2928,10892],[2586,10961],[2792,11187],[2537,11189],[2408,11152],[2446,11284],[2330,11302],[2566,10839],[2863,12146],[2674,12110],[2617,12163],[2332,12145]]);
        BoulderManager.addBoulderList([[3161,10530],[3662,11806],[2648,11097],[3062,11068]]);
        BoulderManager.addBoulderList([[2480,11007],[2688,10858],[3023,10734],[3217,10933],[2662,11204],[3612,11753],[2764,12120],[2393,12143],[3052,12124],[2896,12173]]);

        const smallIsland1Water = new PIXI.Sprite(Environment.SMALL_ISLAND1_UNDERWATER);
        smallIsland1Water.filters = [Environment.surfaceColorShader];
        smallIsland1Water.anchor.x = 0.5;
        smallIsland1Water.anchor.y = 0.5;
        smallIsland1Water.position.x = 937 / 0.04;
        smallIsland1Water.position.y = 203 / 0.04;
        smallIsland1Water.visile = false;
        Renderer.underwaterBackground.addChild(smallIsland1Water);
        CullOptimizer.addPermanentSpriteAfterSetup(smallIsland1Water);
        IslandManager.addIsland([[22828,4684],[22844,4880],[22871,5049],[22915,5185],[22899,5327],[22866,5496],[22861,5599],[22931,5659],[23100,5654],[23329,5621],[23553,5616],[23765,5567],[23907,5490],[23988,5398],[23999,5245],[23956,5076],[23950,4902],[23929,4760],[23836,4651],[23645,4635],[23493,4619],[23345,4564],[23177,4510],[22980,4553],[22871,4608]]);
        TreeManager.addTreeList([[23589,4959],[23204,4977],[23175,5293]]);
        TreeManager.addTreeList([[23094,4706],[23362,4734],[23145,4842],[23414,4846],[23654,4783],[23738,4981],[23387,4986],[23731,5214],[23423,5231],[23154,5148],[23370,5358],[23654,5358],[23106,5415],[22994,5513],[22982,4828]]);
        BoulderManager.addBoulderList([[23789,4883],[23008,5101],[23088,5061]]);
        BoulderManager.addBoulderList([[23175,4674],[22896,4675],[23023,4976],[22987,5303],[23302,5546],[23259,5249],[23579,5107],[23573,5455],[23768,5422],[23790,5303],[23712,4840]]);

        const smallIsland2Water = new PIXI.Sprite(Environment.SMALL_ISLAND2_UNDERWATER);
        smallIsland2Water.filters = [Environment.surfaceColorShader];
        smallIsland2Water.anchor.x = 0.5;
        smallIsland2Water.anchor.y = 0.5;
        smallIsland2Water.position.x = 1744 / 0.04;
        smallIsland2Water.position.y = 274 / 0.04;
        smallIsland2Water.visile = false;
        Renderer.underwaterBackground.addChild(smallIsland2Water);
        CullOptimizer.addPermanentSpriteAfterSetup(smallIsland2Water);
        IslandManager.addIsland([[43189,6408],[43193,6456],[43269,6514],[43357,6586],[43400,6685],[43389,6804],[43353,6910],[43331,6975],[43342,7019],[43415,7033],[43549,7030],[43644,7095],[43687,7179],[43723,7269],[43771,7320],[43894,7324],[43960,7266],[43981,7186],[43934,7095],[43876,7022],[43836,6899],[43836,6815],[43858,6764],[43829,6721],[43756,6703],[43720,6634],[43720,6554],[43796,6481],[43854,6427],[43876,6369],[43832,6299],[43647,6285],[43357,6318],[43222,6354]]);
        TreeManager.addTreeList([[43419,6470],[43630,6452],[43543,6728],[43641,6939],[43826,7095]]);
        TreeManager.addTreeList([[43313,6401],[43546,6395],[43457,6529],[43606,6574],[43684,6750],[43500,6831],[43734,6906],[43693,7007],[43874,7200]]);
        BoulderManager.addBoulderList([[43345,6514],[43650,6623],[43704,7085],[43773,7136],[43363,6994]]);
        BoulderManager.addBoulderList([[43274,6447],[43479,6360],[43729,6497],[43450,6634],[43552,6979],[43764,6799]]);

        const smallIsland3Water = new PIXI.Sprite(Environment.SMALL_ISLAND3_UNDERWATER);
        smallIsland3Water.filters = [Environment.surfaceColorShader];
        smallIsland3Water.anchor.x = 0.5;
        smallIsland3Water.anchor.y = 0.5;
        smallIsland3Water.position.x = 1274 / 0.04;
        smallIsland3Water.position.y = 688 / 0.04;
        smallIsland3Water.visile = false;
        Renderer.underwaterBackground.addChild(smallIsland3Water);
        CullOptimizer.addPermanentSpriteAfterSetup(smallIsland3Water);
        IslandManager.addIsland([[31800,16663],[31702,16601],[31585,16557],[31447,16557],[31378,16604],[31371,16633],[31458,16692],[31527,16739],[31567,16797],[31560,16866],[31495,16942],[31418,17048],[31429,17088],[31509,17095],[31622,17069],[31713,17040],[31789,17062],[31858,17124],[31952,17175],[32043,17204],[32090,17197],[32098,17131],[32076,17058],[32098,17004],[32167,16975],[32290,16920],[32363,16848],[32276,16811],[32210,16797],[32134,16750],[32101,16677],[32039,16601],[31930,16630],[31847,16673]]);
        IslandManager.addIsland([[31593,17563],[31455,17614],[31378,17698],[31400,17752],[31476,17770],[31567,17760],[31654,17749],[31767,17756],[31840,17774],[31938,17800],[32043,17825],[32119,17847],[32221,17861],[32301,17847],[32337,17800],[32334,17738],[32279,17676],[32127,17643],[31941,17614],[31745,17589],[31665,17571]]);
        TreeManager.addTreeList([[31646,16721],[31977,16776],[31981,16932],[31788,16950]]);
        TreeManager.addTreeList([[31725,16765],[31917,16779],[31661,16930],[31851,16873],[31967,17028],[32084,16886],[31665,17681],[31986,17698]]);
        BoulderManager.addBoulderList([[31588,17672],[31715,17650],[31766,17686],[32096,17752],[32187,17726],[31900,16967],[31686,16815],[31471,16669]]);
        BoulderManager.addBoulderList([[31973,16831],[31890,17694]]);

        const island2water = new PIXI.Sprite(Environment.ISLAND2_UNDERWATER);
        island2water.filters = [Environment.surfaceColorShader];
        island2water.anchor.x = 0.5;
        island2water.anchor.y = 0.5;
        island2water.position.x = 592 / 0.04;
        island2water.position.y = 325 / 0.04;
        island2water.visile = false;
        Renderer.underwaterBackground.addChild(island2water);
        CullOptimizer.addPermanentSpriteAfterSetup(island2water);
        IslandManager.addIsland([[14237,7224],[14059,7293],[13895,7384],[13826,7446],[13833,7489],[13950,7493],[14160,7515],[14360,7562],[14564,7649],[14712,7769],[14789,7932],[14789,8118],[14738,8386],[14654,8583],[14509,8732],[14346,8844],[14189,8920],[14099,8989],[14088,9069],[14135,9098],[14320,9142],[14531,9149],[14923,9120],[15236,9033],[15508,8957],[15686,8786],[15766,8579],[15824,8336],[15835,8129],[15817,7929],[15748,7642],[15610,7453],[15410,7311],[15127,7202],[14894,7144],[14618,7111],[14346,7170]]);
        TreeManager.addTreeList([[14790,7537],[15091,7490],[15494,7911],[14997,7810],[14953,8416],[15469,8649],[14663,8874],[14641,7247]]);
        TreeManager.addTreeList([[14502,7343],[14747,7297],[14638,7410],[14873,7339],[14913,7642],[15042,7590],[15326,7491],[15436,7571],[15289,7665],[15493,7702],[15337,8094],[15045,8061],[15237,8200],[15470,8223],[15593,8375],[15330,8475],[15162,8421],[15064,8504],[14920,8607],[15195,8626],[15323,8720],[15418,8758],[15199,8814],[15134,8736],[14992,8908],[14839,8908],[14785,8763],[14744,8920],[14563,8929],[14594,8823],[14473,8909],[14395,8973]]);
        BoulderManager.addBoulderList([[13992,7396],[14159,7320],[14592,7483],[14958,7367],[15554,8105],[15427,8028],[14432,9035],[14675,9067],[14962,9035]]);
        BoulderManager.addBoulderList([[14391,7454],[14997,7466],[14818,7692],[15238,7781],[15069,7898],[15344,7936],[15768,8223],[15755,8424],[15657,8644],[15228,8490],[14907,8471],[14687,8694],[14844,9063],[15086,9018],[14972,8652],[14938,8826]]);

        const island3water = new PIXI.Sprite(Environment.ISLAND3_UNDERWATER);
        island3water.filters = [Environment.surfaceColorShader];
        island3water.anchor.x = 0.5;
        island3water.anchor.y = 0.5;
        island3water.position.x = 984 / 0.04;
        island3water.position.y = 588 / 0.04;
        island3water.visile = false;
        Renderer.underwaterBackground.addChild(island3water);
        CullOptimizer.addPermanentSpriteAfterSetup(island3water);
        IslandManager.addIsland([[26180,13905],[26017,13517],[25588,13201],[25072,13034],[24480,12983],[23993,13052],[23547,13212],[23289,13444],[23136,13822],[23089,14258],[23085,14694],[23180,15061],[23318,15271],[23630,15424],[23843,15566],[23976,15774],[24009,16079],[23994,16319],[24071,16341],[24136,16145],[24285,16079],[24372,16163],[24372,16413],[24427,16406],[24427,16137],[24510,16083],[24576,16156],[24590,16406],[24710,16410],[24699,16137],[24768,16094],[24830,16163],[24859,16381],[24939,16388],[24928,16130],[24997,16083],[25066,16126],[25102,16370],[25182,16359],[25168,16090],[25230,16047],[25299,16105],[25342,16323],[25429,16319],[25386,15752],[25506,15640],[25117,15411],[24953,15560],[24805,15531],[24721,15498],[24543,15549],[24394,15505],[24361,15349],[24459,15135],[24619,14884],[24772,14851],[24917,14986],[25164,14746],[24990,14503],[24968,14219],[25055,13889],[25237,13667],[25444,13551],[25684,13558],[25916,13664],[26127,13914]]);
        IslandManager.addIsland([[24870,14535],[24772,14681],[24957,15066],[25070,15407],[25023,15513],[24819,15698],[25004,15956],[25382,15709],[25662,15618],[25967,15342],[26131,14997],[26200,14735],[26229,14535],[26160,14528],[26011,14808],[25709,14895],[25328,14880],[25063,14695]]);
        TreeManager.addTreeList([[23834,13295],[24223,13182],[24575,13419],[25407,13281],[24913,13807],[24789,14280],[24397,14846],[23692,14777],[23416,14941],[23282,14076],[24219,15496],[24528,15900],[25160,15649],[25527,15413],[25207,15101],[25825,15031],[25211,13495],[24677,13462],[24488,13342],[24143,13281]]);
        TreeManager.addTreeList([[23994,13341],[23739,13313],[23768,13425],[23299,13752],[23432,13780],[23250,14269],[23339,14321],[23226,14486],[23375,14699],[23563,14712],[23511,14842],[23667,15219],[24224,14953],[24264,15140],[24515,14794],[24712,14625],[24828,14360],[24887,14134],[24800,13829],[24752,13502],[25062,13520],[25090,13163],[24486,13080],[25568,13397],[25746,13460],[24958,14745],[25152,14808],[25330,15105],[25841,15096],[25697,15301],[25315,15466],[25053,15856],[24499,15744],[24335,15807],[24218,15601],[24186,15052]]);
        BoulderManager.addBoulderList([[23750,14229],[23754,14054],[23943,13862],[24005,13764],[24328,13902],[24404,13913],[24219,14410],[24302,14418],[23975,13266],[24368,13262],[24600,13491],[24549,13201],[24749,13273],[24884,13317],[25029,13321],[23565,13473],[23445,13513],[23939,14766],[24008,14952],[23935,15133],[24030,15348],[24851,15802],[25007,15900],[25563,15206],[25665,15141],[24858,14578],[24346,15013],[25160,13611],[25312,15366],[24357,15722],[24241,15798],[23612,15093],[23401,15053],[23427,14588],[23362,14519],[23332,13913],[25708,13393],[25824,13560],[25923,13582],[25454,14941],[25272,14872]]);
        BoulderManager.addBoulderList([[25511,15126],[25503,15240],[24961,15735],[24877,15879],[24619,15799],[24125,15262],[23817,15184],[23609,14831],[23488,14407],[24424,14050],[24562,13919],[24428,13494],[24194,13504],[24855,13343],[24867,13194],[25123,13288],[25040,13420],[24670,13805]]);

        const island4water = new PIXI.Sprite(Environment.ISLAND4_UNDERWATER);
        island4water.filters = [Environment.surfaceColorShader];
        island4water.anchor.x = 0.5;
        island4water.anchor.y = 0.5;
        island4water.position.x = 333 / 0.04;
        island4water.position.y = 591 / 0.04;
        island4water.visile = false;
        Renderer.underwaterBackground.addChild(island4water);
        CullOptimizer.addPermanentSpriteAfterSetup(island4water);
        IslandManager.addIsland([[7462,12704],[7303,12940],[7241,13318],[7339,13645],[7473,13982],[7499,14255],[7375,14571],[7281,14898],[7283,15264],[7352,15653],[7457,15998],[7504,16274],[7410,16568],[7428,16721],[7537,16783],[8017,16837],[8598,16881],[9027,16855],[9205,16717],[9299,16561],[9248,16365],[9088,16191],[8776,16074],[8420,15940],[8256,15747],[8227,15518],[8253,15213],[8362,14963],[8540,14814],[8903,14607],[9077,14469],[9226,14203],[9263,14007],[9190,13833],[9016,13749],[8609,13723],[8351,13704],[8166,13530],[8152,13356],[8186,13217],[8274,13097],[8441,13024],[8608,13021],[8833,13021],[9004,13024],[9200,12934],[9265,12803],[9164,12687],[8953,12679],[8651,12788],[8419,12901],[8096,12944],[7834,12901],[7681,12817],[7572,12719]]);
        TreeManager.addTreeList([[8701,12905],[8915,12869],[7575,13159],[7854,13359],[7575,13490],[7705,13515],[7804,13762],[8733,14086],[7596,14955],[7593,15343],[8065,15154],[8032,15561],[7687,15816],[7963,16124],[8526,16244]]);
        TreeManager.addTreeList([[7725,13177],[8815,12872],[7693,13301],[7880,13565],[7666,13664],[8718,14093],[8832,14060],[7771,14830],[8034,14860],[7577,15101],[7631,15206],[7935,15470],[7761,15508],[7840,15637],[7975,15660],[7912,15944],[8084,15966],[8065,16104],[8305,16165],[8215,16290],[8445,16309],[8555,16307],[8116,16519],[8764,16590]]);
        BoulderManager.addBoulderList([[8470,12959],[8277,12970],[7932,13092],[7700,12983],[7838,13582],[7968,13680],[8128,14030],[8048,14455],[8237,14444],[8408,14324],[8869,14099],[7630,14831],[7666,15075],[7968,15253],[7586,15560],[7426,15498],[7706,16141],[7855,16253],[7891,16482],[8632,16424],[8407,16617],[8970,16511],[8364,15988]]);
        BoulderManager.addBoulderList([[9021,12928],[8950,12737],[8757,12955],[8584,12845],[8570,13004],[8202,13035],[7853,13006],[7951,13192],[7507,13045],[7461,13464],[7992,13428],[7682,14016],[8251,13875],[7989,14082],[8475,14193],[8201,14319],[7912,14415],[7809,14564],[8097,14661],[8618,14421],[8931,14327],[8615,14253],[8181,14769],[8124,15721],[7672,15980],[7760,16320],[8038,16437],[7758,16677],[8320,16579],[8367,16405],[8624,16677],[8777,16346],[8954,16587]]);
        
        const island5water = new PIXI.Sprite(Environment.ISLAND5_UNDERWATER);
        island5water.filters = [Environment.surfaceColorShader];
        island5water.anchor.x = 0.5;
        island5water.anchor.y = 0.5;
        island5water.position.x = 1418 / 0.04;
        island5water.position.y = 400 / 0.04;
        island5water.visile = false;
        Renderer.underwaterBackground.addChild(island5water);
        CullOptimizer.addPermanentSpriteAfterSetup(island5water);
        IslandManager.addIsland([[34178,8988],[34105,9057],[34087,9173],[34134,9290],[34251,9337],[34381,9304],[34461,9246],[34599,9250],[34708,9304],[34763,9377],[34879,9428],[35090,9442],[35206,9402],[35242,9315],[35224,9166],[35123,9061],[35014,8999],[34850,9032],[34752,9097],[34647,9141],[34523,9144],[34436,9104],[34352,9028],[34265,8988]]);
        IslandManager.addIsland([[35969,9053],[35991,9210],[35965,9391],[35958,9489],[35991,9544],[36071,9576],[36252,9595],[36452,9602],[36565,9624],[36685,9642],[36783,9616],[36812,9551],[36794,9453],[36735,9366],[36637,9319],[36561,9290],[36496,9202],[36427,9126],[36307,9050],[36118,9021],[35998,8999]]);
        IslandManager.addIsland([[34767,10063],[34567,10176],[34480,10281],[34396,10441],[34258,10539],[34091,10619],[33978,10692],[33975,10764],[34033,10815],[34167,10866],[34247,10921],[34367,10942],[34483,10917],[34621,10931],[34745,10971],[34839,10990],[34890,10942],[34868,10844],[34919,10710],[34985,10565],[34974,10427],[34974,10278],[34985,10092],[34861,10041]]);
        IslandManager.addIsland([[35591,10394],[35660,10561],[35671,10753],[35711,10921],[35824,10993],[36023,11011],[36194,10986],[36321,10881],[36398,10659],[36434,10477],[36478,10307],[36340,10219],[36092,10180],[35853,10194],[35671,10205],[35588,10274]]);
        TreeManager.addTreeList([[34869,9220],[36151,9322],[36387,9326],[36533,9500]]);
        TreeManager.addTreeList([[34948,9176],[34990,9200],[34937,9247],[34318,9127],[34236,9107],[34213,9183],[34881,9286],[36263,9242],[36100,9190],[36218,9372],[36128,9454],[36446,9383],[36480,9502],[36674,9470]]);
        BoulderManager.addBoulderList([[34264,9143],[34340,9223],[34609,9223],[34849,9332],[36262,9448],[35895,10476],[36189,10411],[36000,10564],[36178,10734],[35975,10782],[34802,10353],[34613,10415],[34852,10636],[34558,10629],[34580,10771],[34289,10782]]);
        BoulderManager.addBoulderList([[34494,10699],[34401,10613],[34248,10683],[34479,10799],[34733,10758],[34732,10590],[34534,10500],[34727,10295],[34635,10243],[35831,10333],[36022,10335],[35817,10439],[35859,10631],[36105,10733],[36170,10572],[36278,10496],[36292,9306],[34983,9299]]);
        
        const endIslandTopWater = new PIXI.Sprite(Environment.END_ISLAND_TOP_UNDERWATER);
        endIslandTopWater.filters = [Environment.surfaceColorShader];
        endIslandTopWater.anchor.x = 0.5;
        endIslandTopWater.anchor.y = 0.5;
        endIslandTopWater.position.x = 2022 / 0.04;
        endIslandTopWater.position.y = 403 / 0.04;
        endIslandTopWater.visile = false;
        Renderer.underwaterBackground.addChild(endIslandTopWater);
        CullOptimizer.addPermanentSpriteAfterSetup(endIslandTopWater);
        const endIslandBottomWater = new PIXI.Sprite(Environment.END_ISLAND_BOTTOM_UNDERWATER);
        endIslandBottomWater.filters = [Environment.surfaceColorShader];
        endIslandBottomWater.anchor.x = 0.5;
        endIslandBottomWater.anchor.y = 0.5;
        endIslandBottomWater.position.x = 2022 / 0.04;
        endIslandBottomWater.position.y = endIslandTopWater.position.y + 4000;
        endIslandBottomWater.visile = false;
        Renderer.underwaterBackground.addChild(endIslandBottomWater);
        CullOptimizer.addPermanentSpriteAfterSetup(endIslandBottomWater);
        IslandManager.addIsland([[51565,8711],[51391,8794],[51075,9019],[50871,9285],[50708,9593],[50610,9931],[50537,10280],[50472,10752],[50457,11546],[50486,12195],[50523,12945],[50570,13512],[50515,14181],[50494,14820],[50574,15101],[50831,15283],[51108,15392],[51507,15512],[51605,15526]]);
        WinManager.setWinZone([[51565,8711],[51391,8794],[51075,9019],[50871,9285],[50708,9593],[50610,9931],[50537,10280],[50472,10752],[50457,11546],[50486,12195],[50523,12945],[50570,13512],[50515,14181],[50494,14820],[50574,15101],[50831,15283],[51108,15392],[51507,15512],[51605,15526]]);
        
        BoulderManager.addBoulderList([[12058,10638],[12145,10638],[12123,10703],[12210,10703],[12014,10725],[12058,10791],[12145,10791],[12254,10769],[12123,10856],[12210,10900],[12276,10834],[12276,10943],[12101,10921],[12014,10856],[11927,10812],[11905,10703],[11971,10638],[12363,10791],[12385,10921],[12450,10812],[12472,10900],[12450,11009],[12319,11009],[12472,11096],[12559,11030],[12341,11118],[18895,10636],[18786,10767],[18895,10745],[19026,10680],[19070,10767],[19026,10876],[18852,10898],[18939,10832],[18983,11050],[19113,10919],[18852,11072],[19092,11072],[19135,11181],[19244,11028],[19244,11268],[19331,11181],[19113,11312],[19201,11399],[19310,11312],[31796,12701],[31927,12722],[31927,12853],[32057,12831],[31948,12962],[32057,12962],[31927,13115],[32123,13115],[32275,12962],[31818,12962],[31818,12853],[32232,12875],[32232,13115],[32428,13136],[32254,13398],[32363,13398],[32297,13267],[32363,13463],[32471,13463],[43863,13821],[43994,13712],[44147,13756],[44038,13843],[44277,13821],[44147,13930],[43951,14017],[44125,14017],[44234,14017],[44343,13908],[44365,14017]], true);

        // big teeth
        PhysicsManager.addPolygon([[7841,14181],[7788,14250],[7754,14344],[7751,14401],[7788,14415],[7866,14415],[7894,14396],[7965,14363],[8077,14311],[8168,14277],[8231,14254],[8318,14228],[8439,14177],[8538,14125],[8609,14078],[8627,14029],[8602,13995],[8513,14021],[8489,14028],[8431,14005],[8382,14012],[8408,14055],[8325,14028],[8318,14069],[8329,14114],[8233,14072],[8231,14125],[8227,14172],[8112,14125],[8123,14166],[8130,14204],[8113,14204],[8067,14164],[8033,14163],[8039,14227],[8033,14257],[7985,14216],[7951,14186],[7946,14250],[7943,14269],[7867,14299],[7860,14178]]);
        // plane bodys
        PhysicsManager.addPolygon([[14935,8705],[14895,8718],[14838,8776],[14852,8798],[14917,8802],[14974,8801],[15040,8806],[15093,8840],[15127,8808],[15091,8768],[15104,8705]]);
        // plane wing
        PhysicsManager.addPolygon([[15298,8359],[15340,8390],[15418,8368],[15341,8315]]);
        // plane passenger thing
        PhysicsManager.addPolygon([[15122,7541],[15107,7588],[15133,7641],[15388,7620],[15377,7515]]);
        // list of skull island squishy things
        PhysicsManager.addPolygon([[24050,13020],[24031,13040],[24039,13061],[24061,13061],[24069,13038]]);
        PhysicsManager.addPolygon([[24931,13244],[24908,13256],[24908,13289],[24918,13309],[24951,13309],[24970,13284],[24955,13248]]);
        PhysicsManager.addPolygon([[23453,13531],[23434,13546],[23441,13569],[23467,13568],[23472,13544]]);
        PhysicsManager.addPolygon([[23865,13656],[23837,13671],[23841,13701],[23853,13725],[23898,13726],[23902,13687],[23887,13658]]);
        PhysicsManager.addPolygon([[24353,13702],[24328,13724],[24337,13770],[24382,13773],[24394,13722]]);
        PhysicsManager.addPolygon([[23622,13933],[23601,13950],[23612,13981],[23642,13981],[23653,13954]]);
        PhysicsManager.addPolygon([[23612,14060],[23585,14080],[23597,14128],[23642,14129],[23657,14083]]);
        PhysicsManager.addPolygon([[24537,14090],[24508,14113],[24522,14161],[24564,14161],[24576,14109]]);
        PhysicsManager.addPolygon([[23752,14408],[23725,14430],[23731,14477],[23786,14483],[23792,14427]]);
        PhysicsManager.addPolygon([[24413,14409],[24384,14432],[24395,14481],[24447,14481],[24447,14421]]);
        PhysicsManager.addPolygon([[24257,14517],[24237,14545],[24244,14570],[24279,14573],[24285,14532]]);
        PhysicsManager.addPolygon([[23187,14614],[23166,14634],[23179,14664],[23210,14660],[23218,14631]]);
        PhysicsManager.addPolygon([[25025,14871],[25002,14895],[25011,14922],[25050,14918],[25050,14882]]);
        PhysicsManager.addPolygon([[25974,13560],[25959,13584],[25966,13608],[25997,13605],[26004,13578]]);
        PhysicsManager.addPolygon([[25571,15128],[25548,15151],[25558,15184],[25594,15195],[25613,15181],[25609,15132]]);
        PhysicsManager.addPolygon([[25769,15365],[25751,15387],[25759,15410],[25791,15410],[25800,15381]]);
        PhysicsManager.addPolygon([[24918,15803],[24900,15826],[24909,15849],[24938,15846],[24944,15814]]);
        PhysicsManager.addPolygon([[24024,16185],[24009,16206],[24024,16226],[24050,16222],[24052,16196]]);
        PhysicsManager.addPolygon([[25336,15960],[25318,15979],[25329,16004],[25355,16001],[25361,15974]]);
        // skull island building
        PhysicsManager.addPolygon([[24041,13911],[23992,13959],[23994,14026],[23957,14024],[23924,14121],[23924,14181],[24073,14189],[24071,14084],[24090,14084],[24089,14187],[24248,14192],[24224,14033],[24186,14023],[24184,13959],[24134,13906]]);
        // quad island squishy things
        PhysicsManager.addPolygon([[34781,10242],[34763,10265],[34769,10290],[34801,10288],[34807,10261]]);
        PhysicsManager.addPolygon([[34631,10479],[34606,10505],[34615,10544],[34661,10546],[34673,10504],[34653,10482]]);
        PhysicsManager.addPolygon([[34386,10662],[34364,10682],[34375,10709],[34403,10707],[34409,10681]]);
        PhysicsManager.addPolygon([[35941,10370],[35921,10393],[35933,10419],[35962,10418],[35967,10389]]);
        PhysicsManager.addPolygon([[35945,10637],[35922,10653],[35918,10682],[35933,10709],[35967,10708],[35981,10675],[35968,10644]]);

        // hole a
        const holeA = [[5178,13188],[13839,17134],[18479,5270],[41437,12127],[34987,16674]];
        for (let i = 0; i < holeA.length; i++) {
            new HoleA(new Vec2(holeA[i][0], holeA[i][1]));
        }

        const holeB = [[11069,15038],[28144,3815],[38151,5666],[21524,17713]];
        for (let i = 0; i < holeB.length; i++) {
            new HoleB(new Vec2(holeB[i][0], holeB[i][1]));
        }

        const holeC = [[21640,8086],[27028,17534],[33599,6941],[45071,15594]];
        for (let i = 0; i < holeC.length; i++) {
            new HoleC(new Vec2(holeC[i][0], holeC[i][1]));
        }

        const pink = [[4529,11693],[4712,11087],[5042,11437],[5345,10639],[5609,11046],[5577,11290],[5459,11586],[3687,12448],[3474,12670],[3613,9724],[3728,9946],[7391,11974],[7751,12163],[9889,13799],[7148,17609],[7475,17772],[7982,17483],[8102,18023],[8625,17614],[8794,17985],[9208,17581],[9524,18115],[10431,17018],[10818,17405],[10419,17501],[12336,7793],[12930,7995],[12505,8164],[12925,8245],[13148,8393],[12669,8556],[12865,8867],[13039,9390],[12620,9586],[13711,9881],[14032,10056],[14594,10241],[14976,6413],[15466,6506],[15210,6691],[15902,6871],[16376,7159],[16567,7742],[16768,7917],[18791,8213],[19178,8300],[19079,8731],[19406,8867],[19112,9205],[18753,9412],[15737,12544],[16135,12713],[24537,4821],[24831,4990],[24325,6052],[24685,6161],[24336,6461],[24789,6712],[33087,10432],[32662,9604],[33261,9773],[35462,8311],[35817,8475],[36214,8638],[36536,8818],[36945,9014],[37288,9243],[37446,9614],[37457,9848],[37071,11044],[36929,11284],[36662,11540],[36297,11611],[36035,11720],[29949,16310],[30412,16413],[29949,16844],[30538,16784],[30194,17116],[30554,17514],[29949,17726],[30500,17852],[30963,17955],[30434,18206],[30996,18293],[31431,18669],[30625,18789],[30957,19078],[32750,17710],[33104,17874],[32728,18086],[32984,18522],[32548,18680],[32810,19029],[32276,19116],[43049,7693],[43349,7927],[43719,8069],[43937,8232],[48679,12869],[49175,13092],[48897,13365],[49267,13583],[49414,14019],[49236,15357],[49743,15553],[49732,15924]];
        for (let i = 0; i < pink.length; i++) {
            const sponge = new PinkSponge();
            sponge.position.x = pink[i][0];
            sponge.position.y = pink[i][1];

            CullOptimizer.addPermanentSpriteAfterSetup(sponge);
        }

        const kelp = [[5601,9320],[5885,9494],[5797,9843],[6190,9908],[5732,9952],[6190,10082],[5819,10126],[6277,10366],[5885,10453],[6495,10649],[6015,10562],[6429,10671],[6168,10758],[6517,10889],[6146,10976],[6560,11107],[6190,11216],[6495,11281],[6233,11368],[6342,11608],[6582,11565],[6647,9363],[6844,9668],[6713,9734],[6953,9930],[6909,10061],[6691,10148],[6909,10344],[7018,10409],[7105,10584],[10146,11053],[10604,11227],[11062,11401],[10255,11467],[10626,11663],[11018,11750],[10321,11815],[10996,12012],[10648,12121],[10277,12142],[9732,12360],[10713,12251],[11323,12251],[10996,12360],[10386,12491],[10212,12622],[11084,12644],[11302,12687],[10953,12862],[10473,12971],[10016,13080],[10255,13210],[10670,13254],[10953,13254],[11411,13254],[11498,13385],[11040,13559],[10888,13624],[11149,13821],[11585,13821],[11825,13864],[16072,14347],[16770,14347],[16966,14369],[16530,14478],[16334,14652],[15985,14696],[15985,14761],[16399,14870],[16617,14870],[16944,14892],[17075,14936],[16922,15176],[16661,15219],[16377,15263],[16050,15437],[15920,15546],[16334,15611],[16900,15611],[17271,15590],[17620,15611],[17685,15633],[17620,15873],[17293,15982],[16857,16156],[16944,16331],[17445,16440],[18252,16440],[18448,16527],[18513,16636],[17838,16832],[17620,16854],[17031,17268],[18056,17508],[16991,8825],[17449,8934],[17100,9108],[17493,9152],[17166,9370],[17362,9523],[17689,9544],[17209,9871],[17449,9893],[17798,9980],[17100,10133],[17406,10242],[17667,10242],[17929,10329],[17580,10373],[17754,10438],[23632,7366],[23915,7431],[23697,7584],[24068,7671],[23762,7933],[24024,7998],[24351,8020],[23959,8216],[24264,8238],[25182,11519],[25748,11519],[25356,11715],[25596,11715],[25901,11737],[25269,11955],[25726,12086],[26097,12108],[25901,12282],[26271,12347],[26511,12369],[26032,12543],[26555,12587],[26751,12631],[26402,12827],[26707,12936],[27034,12958],[26751,13285],[27121,13285],[27448,13415],[27056,13699],[27383,13699],[27775,13808],[27165,14091],[27361,14091],[27514,14113],[27056,14418],[27296,14614],[27056,14897],[27492,14897],[27296,15072],[27666,15203],[27645,15203],[28037,15377],[28473,15312],[28080,15617],[28451,15660],[28800,15573],[28538,16009],[28952,16096],[29170,15878],[29148,16314],[29323,16227],[27863,14244],[28189,14462],[32937,10865],[33264,11061],[33330,11170],[32741,11236],[32741,11432],[33177,11781],[32153,11541],[32392,11693],[32806,11955],[31499,11715],[31738,11824],[32087,12064],[32349,12173],[31259,12064],[31499,12238],[31826,12478],[30997,12173],[31390,12543],[30518,12238],[30736,12391],[31106,12674],[29493,12304],[29820,12522],[30213,12740],[30474,12936],[29602,12805],[29711,12936],[30147,13110],[29014,12936],[29515,13197],[29690,13306],[28513,13176],[29101,13459],[29406,13568],[28687,13546],[29406,13895],[28796,13960],[28774,13960],[28600,14069],[28861,14178],[30483,13394],[31115,13415],[30614,13699],[30788,13786],[31311,13786],[30614,14004],[30832,14113],[31050,14156],[31333,14244],[30657,14592],[30897,14658],[31268,14723],[30853,14985],[30962,15028],[31246,15072],[31442,15094],[31050,15421],[31093,15486],[31355,15530],[31682,15530],[31093,15878],[31289,15922],[31507,15987],[29633,13503],[30134,13503],[29480,13720],[29676,13873],[29262,14026],[29589,14135],[28848,14200],[29371,14374],[29916,14353],[30134,14353],[28696,14527],[29393,14571],[29785,14592],[30156,14614],[29175,14832],[29262,14876],[30047,14941],[29676,15159],[29873,15181],[29720,15508],[30047,15530],[30439,15530],[30330,15791],[27231,5950],[27754,6081],[28539,6125],[28931,6190],[29541,6277],[27078,6364],[27688,6452],[28408,6495],[28713,6561],[29236,6648],[26904,6757],[27362,6866],[27667,6931],[28081,6975],[27231,7149],[28168,7323],[28582,7367],[29280,7389],[30064,7476],[28081,7541],[28321,7585],[28604,7607],[28909,7607],[29236,7672],[29759,7694],[27318,7738],[27601,7781],[28103,7868],[28778,7999],[26642,7912],[27100,7999],[27579,8065],[27972,8152],[28495,8195],[29018,8261],[29890,8348],[27231,8413],[27623,8479],[28059,8500],[28255,8522],[28626,8588],[26795,8544],[27383,8675],[27732,8740],[28277,8849],[28822,8958],[29171,9024],[26904,8936],[27274,9045],[27885,9089],[28473,9198],[28735,9263],[27514,9351],[27623,9416],[28059,9503],[28582,9568],[26795,9830],[27841,9852],[28037,9852],[28713,9874],[29214,9874],[29607,9852],[27710,10004],[28342,10070],[28822,10070],[29062,10048],[29454,10070],[30326,5994],[30326,6103],[30195,6343],[30130,6582],[30304,6626],[30587,6691],[30130,7106],[30239,7323],[30609,7520],[30871,7694],[30522,7825],[30239,7890],[30260,8086],[30914,8283],[30914,8326],[30326,8522],[30239,8697],[30130,9002],[30653,9067],[30740,9133],[30522,9220],[30108,9460],[30304,9656],[41305,6796],[41414,6796],[41828,6840],[41087,7036],[41414,7014],[41784,7058],[42329,7058],[40912,7319],[41305,7450],[41828,7515],[42307,7472],[42438,7472],[41348,7537],[41414,7581],[41980,7668],[42198,7690],[41021,7864],[41283,7886],[41850,7908],[42351,7930],[41348,8366],[41697,8366],[42373,8366],[42852,8387],[41741,8692],[42067,8692],[42460,8671],[42896,8605],[41828,8910],[42394,8932],[42852,8954],[43223,8867],[42700,9172],[42961,9237],[43353,9216],[43637,9150],[42765,9586],[43506,9608],[43680,9564],[44007,9434],[43506,9782],[44247,9739],[44443,9586],[44661,9346],[44013,9935],[44339,9935],[44775,10022],[45168,10044],[44274,10414],[44579,10393],[44863,10393],[45211,10393],[44318,10545],[44950,10611],[45037,10632],[44688,10807],[45059,10916],[44427,11068],[45211,11112],[45625,11112],[45887,11090],[44993,11482],[45299,11504],[45713,11548],[45364,11744],[45822,11744],[46083,11744],[45429,12202],[45756,12180],[46127,12158],[46519,12136],[45756,12550],[45996,12529],[46214,12507],[46890,12507],[46127,12899],[46432,12899],[46824,12899],[46345,13139],[46737,13161],[47217,13182],[47827,13204],[45952,13466],[46149,13531],[47020,13509],[47892,13509],[45495,13749],[45756,13771],[46802,13771],[47587,13771],[45407,13924],[45974,13945],[46519,13967],[47217,13945],[47783,13945],[45647,14163],[46388,14163],[47129,14142],[47544,14120],[46279,14403],[46606,14447],[47151,14425],[47522,14403],[46214,14686],[46824,14708],[47609,14730],[45887,14839],[46170,14883],[46693,14948],[47217,14948],[48001,14948],[46432,15144],[47042,15231],[47740,15275],[48197,15297],[46824,15624],[47282,15689],[48328,15689],[47108,15929],[47631,15972],[48197,15972],[48851,15951],[47761,16408],[48045,16430],[48459,16387],[48786,16343],[48503,16757],[48895,16779],[50072,16474],[48742,16975],[49418,16910],[49963,16801],[50573,16713],[49418,17280],[49963,17280],[50464,17149],[50987,16975],[49854,17781],[50355,17716],[50944,17564],[51292,17542],[2106,12831],[2289,12827],[2446,12919],[2011,12917],[2222,12989],[2455,13055],[2647,13053],[2046,13093],[2253,13144],[2447,13186],[2637,13222],[2231,13342],[2506,13436]];
        for (let i = 0; i < kelp.length; i++) {
            const entry = new Kelp();
            entry.position.x = kelp[i][0];
            entry.position.y = kelp[i][1];

            CullOptimizer.addPermanentSpriteAfterSetup(entry);
        }

        const ships = [[4674,10183],[21800,11555],[25706,4306],[28897,18392],[38875,8969],[38512,16191],[5804,15624]];
        for (let i = 0; i < ships.length; i++) {
            const entry = new SunkenShip();
            entry.position.x = ships[i][0];
            entry.position.y = ships[i][1];

            CullOptimizer.addPermanentSpriteAfterSetup(entry);
        }

        // if (Information.moon) {
        //     SharkManager.addShark(new Vec2(0, 0));
        //     SharkManager.addShark(new Vec2(0, 0));
        //     SharkManager.addShark(new Vec2(0, 0));
        //     SharkManager.addShark(new Vec2(0, 0));
        // }
        // SharkManager.addShark(new Vec2(0, 0));
        // SharkManager.addShark(new Vec2(0, 0));
    }

    static update() {
        const heightScale = window.innerHeight / Camera.cameraHeight;
        const scaleX = Camera.scale.x * heightScale;
        const scaleY = Camera.scale.y * heightScale;

        Environment.waterFilter.setOffset(Vec2.from(Camera.position.x * scaleX, -Camera.position.y * scaleY));
        Environment.waterFilter.setTime(Environment.waterTime);
        Environment.waterTime += 1;
    }

    static resize() {
        Renderer.underwater.filterArea = new PIXI.Rectangle(0, 0, window.innerWidth, window.innerHeight);
    }

    static addSpongeList(points) {
        for (let i = 0; i < points.length; i++) {
            const sponge = new PinkSponge();
            sponge.position.x = points[i][0];
            sponge.position.y = points[i][1];

            CullOptimizer.addPermanentSpriteAfterSetup(sponge);
        }
    }
}